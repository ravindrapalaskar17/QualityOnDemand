---
# MegaLinter GitHub Action configuration file
# More info at https://megalinter.io
name: MegaLinter

on:  # yamllint disable-line rule:truthy
  # Pull Requests to main
  push:
    branches: [master, main, draft/Extend-the-API-guidelines-with-a-concrete-ruleset]

env:  # Comment env block if you do not want to apply fixes
  # Apply linter fixes configuration
  APPLY_FIXES: all  # When active, APPLY_FIXES must also be defined as environment variable (in github/workflows/mega-linter.yml or other CI tool)
  APPLY_FIXES_EVENT: pull_request  # Decide which event triggers application of fixes in a commit or a PR (pull_request, push, all)
  APPLY_FIXES_MODE: commit  # If APPLY_FIXES is used, defines if the fixes are directly committed (commit) or posted in a PR (pull_request)
  # Add Spectral Configuration
  SPECTRAL_CONFIG: .spectral.yml  # Path to your Spectral configuration file
  SPELL_CHECK: true  # Enable the spell check
  SPELL_CHECK_JS_FILE: "spell-check.js"


concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: MegaLinter
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push, comment issues & post new PR
      # Remove the ones you do not need
      contents: write
      issues: write
      pull-requests: write
    steps:
      # Git Checkout
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # If you use VALIDATE_ALL_CODEBASE = true, you can remove this line to improve performances

      - name: Install Spectral
        run: npm install -g @stoplight/spectral

      - name: Run Spectral Lint
        run: spectral lint ${{ github.workspace }}/qod-api.yaml --verbose

      - name: Install 'spellchecker' Module
        run: npm install spellchecker
        working-directory: ${{ github.workspace }}

      - name: JavaScript Spell Check
        run: "node '${{ github.workspace }}/${{ env.SPELL_CHECK_JS_FILE }}' code/API_definitions/qod-api2.yaml"
        env:
          NODE_PATH: ./node_modules

      # MegaLinter
      - name: MegaLinter
        id: ml
        # You can override MegaLinter flavor used to have faster performances
        # More info at https://megalinter.io/flavors/
        uses: oxsecurity/megalinter/flavors/java@v7.3.0
        env:
          # All available variables are described in documentation
          # https://megalinter.io/configuration/
          # VALIDATE_ALL_CODEBASE: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }} # Validates all source when push on main, else just the git diff with main. Override with true if you always want to lint all sources
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # ADD YOUR CUSTOM ENV VARIABLES HERE OR DEFINE THEM IN A FILE .mega-linter.yml AT THE ROOT OF YOUR REPOSITORY
          DISABLE: COPYPASTE,MARKDOWN
          DISABLE_LINTERS: SPELL_CSPELL,SPELL_LYCHEE,YAML_PRETTIER,REPOSITORY_SEMGREP,REPOSITORY_DEVSKIM,REPOSITORY_KICS,REPOSITORY_TRIVY,REPOSITORY_CHECKOV,REPOSITORY_GITLEAKS,JAVA_PMD
          YAML_YAMLLINT_CONFIG_FILE: ".yamllint.yaml"
          JAVA_CHECKSTYLE_CONFIG_FILE: "javalint.xml"

          # Add the Spectral Linter
      - name: Spectral Linter
        run: spectral lint --format stylish --output .spectral-report.json .spectral.yml  # Adjust as needed
        env:
          NODE_PATH: ./node_modules
          # Upload MegaLinter artifacts
      - name: Archive production artifacts
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log
